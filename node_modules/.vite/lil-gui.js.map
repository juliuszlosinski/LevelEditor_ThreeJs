{
  "version": 3,
  "sources": ["../lil-gui/dist/lil-gui.esm.js", "dep:lil-gui"],
  "sourcesContent": ["/**\n * lil-gui\n * https://lil-gui.georgealways.com\n * @version 0.16.0\n * @author George Michael Brower\n * @license MIT\n */\n\n/**\n * Base class for all controllers.\n */\nclass Controller {\n\n\tconstructor( parent, object, property, className, widgetTag = 'div' ) {\n\n\t\t/**\n\t\t * The GUI that contains this controller.\n\t\t * @type {GUI}\n\t\t */\n\t\tthis.parent = parent;\n\n\t\t/**\n\t\t * The object this controller will modify.\n\t\t * @type {object}\n\t\t */\n\t\tthis.object = object;\n\n\t\t/**\n\t\t * The name of the property to control.\n\t\t * @type {string}\n\t\t */\n\t\tthis.property = property;\n\n\t\t/**\n\t\t * Used to determine if the controller is disabled.\n\t\t * Use `controller.disable( true|false )` to modify this value\n\t\t * @type {boolean}\n\t\t */\n\t\tthis._disabled = false;\n\n\t\t/**\n\t\t * The value of `object[ property ]` when the controller was created.\n\t\t * @type {any}\n\t\t */\n\t\tthis.initialValue = this.getValue();\n\n\t\t/**\n\t\t * The outermost container DOM element for this controller.\n\t\t * @type {HTMLElement}\n\t\t */\n\t\tthis.domElement = document.createElement( 'div' );\n\t\tthis.domElement.classList.add( 'controller' );\n\t\tthis.domElement.classList.add( className );\n\n\t\t/**\n\t\t * The DOM element that contains the controller's name.\n\t\t * @type {HTMLElement}\n\t\t */\n\t\tthis.$name = document.createElement( 'div' );\n\t\tthis.$name.classList.add( 'name' );\n\n\t\tController.nextNameID = Controller.nextNameID || 0;\n\t\tthis.$name.id = `lil-gui-name-${++Controller.nextNameID}`;\n\n\t\t/**\n\t\t * The DOM element that contains the controller's \"widget\" (which differs by controller type).\n\t\t * @type {HTMLElement}\n\t\t */\n\t\tthis.$widget = document.createElement( widgetTag );\n\t\tthis.$widget.classList.add( 'widget' );\n\n\t\t/**\n\t\t * The DOM element that receives the disabled attribute when using disable()\n\t\t * @type {HTMLElement}\n\t\t */\n\t\tthis.$disable = this.$widget;\n\n\t\tthis.domElement.appendChild( this.$name );\n\t\tthis.domElement.appendChild( this.$widget );\n\n\t\tthis.parent.children.push( this );\n\t\tthis.parent.controllers.push( this );\n\n\t\tthis.parent.$children.appendChild( this.domElement );\n\n\t\tthis._listenCallback = this._listenCallback.bind( this );\n\n\t\tthis.name( property );\n\n\t}\n\n\t/**\n\t * Sets the name of the controller and its label in the GUI.\n\t * @param {string} name\n\t * @returns {this}\n\t */\n\tname( name ) {\n\t\t/**\n\t\t * The controller's name. Use `controller.name( 'Name' )` to modify this value.\n\t\t * @type {string}\n\t\t */\n\t\tthis._name = name;\n\t\tthis.$name.innerHTML = name;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Pass a function to be called whenever the value is modified by this controller.\n\t * The function receives the new value as its first parameter. The value of `this` will be the\n\t * controller.\n\t * @param {Function} callback\n\t * @returns {this}\n\t * @example\n\t * const controller = gui.add( object, 'property' );\n\t *\n\t * controller.onChange( function( v ) {\n\t * \tconsole.log( 'The value is now ' + v );\n\t * \tconsole.assert( this === controller );\n\t * } );\n\t */\n\tonChange( callback ) {\n\t\t/**\n\t\t * Used to access the function bound to `onChange` events. Don't modify this value directly.\n\t\t * Use the `controller.onChange( callback )` method instead.\n\t\t * @type {Function}\n\t\t */\n\t\tthis._onChange = callback;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Calls the onChange methods of this controller and its parent GUI.\n\t * @protected\n\t */\n\t_callOnChange() {\n\n\t\tthis.parent._callOnChange( this );\n\n\t\tif ( this._onChange !== undefined ) {\n\t\t\tthis._onChange.call( this, this.getValue() );\n\t\t}\n\n\t\tthis._changed = true;\n\n\t}\n\n\t/**\n\t * Pass a function to be called after this controller has been modified and loses focus.\n\t * @param {Function} callback\n\t * @returns {this}\n\t * @example\n\t * const controller = gui.add( object, 'property' );\n\t *\n\t * controller.onFinishChange( function( v ) {\n\t * \tconsole.log( 'Changes complete: ' + v );\n\t * \tconsole.assert( this === controller );\n\t * } );\n\t */\n\tonFinishChange( callback ) {\n\t\t/**\n\t\t * Used to access the function bound to `onFinishChange` events. Don't modify this value\n\t\t * directly. Use the `controller.onFinishChange( callback )` method instead.\n\t\t * @type {Function}\n\t\t */\n\t\tthis._onFinishChange = callback;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Should be called by Controller when its widgets lose focus.\n\t * @protected\n\t */\n\t_callOnFinishChange() {\n\n\t\tif ( this._changed ) {\n\n\t\t\tthis.parent._callOnFinishChange( this );\n\n\t\t\tif ( this._onFinishChange !== undefined ) {\n\t\t\t\tthis._onFinishChange.call( this, this.getValue() );\n\t\t\t}\n\n\t\t}\n\n\t\tthis._changed = false;\n\n\t}\n\n\t/**\n\t * Sets the controller back to its initial value.\n\t * @returns {this}\n\t */\n\treset() {\n\t\tthis.setValue( this.initialValue );\n\t\tthis._callOnFinishChange();\n\t\treturn this;\n\t}\n\n\t/**\n\t * Enables this controller.\n\t * @param {boolean} enabled\n\t * @returns {this}\n\t * @example\n\t * controller.enable();\n\t * controller.enable( false ); // disable\n\t * controller.enable( controller._disabled ); // toggle\n\t */\n\tenable( enabled = true ) {\n\t\treturn this.disable( !enabled );\n\t}\n\n\t/**\n\t * Disables this controller.\n\t * @param {boolean} disabled\n\t * @returns {this}\n\t * @example\n\t * controller.disable();\n\t * controller.disable( false ); // enable\n\t * controller.disable( !controller._disabled ); // toggle\n\t */\n\tdisable( disabled = true ) {\n\n\t\tif ( disabled === this._disabled ) return this;\n\n\t\tthis._disabled = disabled;\n\n\t\tthis.domElement.classList.toggle( 'disabled', disabled );\n\t\tthis.$disable.toggleAttribute( 'disabled', disabled );\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Destroys this controller and replaces it with a new option controller. Provided as a more\n\t * descriptive syntax for `gui.add`, but primarily for compatibility with dat.gui.\n\t *\n\t * Use caution, as this method will destroy old references to this controller. It will also\n\t * change controller order if called out of sequence, moving the option controller to the end of\n\t * the GUI.\n\t * @example\n\t * // safe usage\n\t *\n\t * gui.add( object1, 'property' ).options( [ 'a', 'b', 'c' ] );\n\t * gui.add( object2, 'property' );\n\t *\n\t * // danger\n\t *\n\t * const c = gui.add( object1, 'property' );\n\t * gui.add( object2, 'property' );\n\t *\n\t * c.options( [ 'a', 'b', 'c' ] );\n\t * // controller is now at the end of the GUI even though it was added first\n\t *\n\t * assert( c.parent.children.indexOf( c ) === -1 )\n\t * // c references a controller that no longer exists\n\t *\n\t * @param {object|Array} options\n\t * @returns {Controller}\n\t */\n\toptions( options ) {\n\t\tconst controller = this.parent.add( this.object, this.property, options );\n\t\tcontroller.name( this._name );\n\t\tthis.destroy();\n\t\treturn controller;\n\t}\n\n\t/**\n\t * Sets the minimum value. Only works on number controllers.\n\t * @param {number} min\n\t * @returns {this}\n\t */\n\tmin( min ) {\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the maximum value. Only works on number controllers.\n\t * @param {number} max\n\t * @returns {this}\n\t */\n\tmax( max ) {\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the step. Only works on number controllers.\n\t * @param {number} step\n\t * @returns {this}\n\t */\n\tstep( step ) {\n\t\treturn this;\n\t}\n\n\t/**\n\t * Calls `updateDisplay()` every animation frame. Pass `false` to stop listening.\n\t * @param {boolean} listen\n\t * @returns {this}\n\t */\n\tlisten( listen = true ) {\n\n\t\t/**\n\t\t * Used to determine if the controller is currently listening. Don't modify this value\n\t\t * directly. Use the `controller.listen( true|false )` method instead.\n\t\t * @type {boolean}\n\t\t */\n\t\tthis._listening = listen;\n\n\t\tif ( this._listenCallbackID !== undefined ) {\n\t\t\tcancelAnimationFrame( this._listenCallbackID );\n\t\t\tthis._listenCallbackID = undefined;\n\t\t}\n\n\t\tif ( this._listening ) {\n\t\t\tthis._listenCallback();\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t_listenCallback() {\n\t\tthis._listenCallbackID = requestAnimationFrame( this._listenCallback );\n\t\tthis.updateDisplay();\n\t}\n\n\t/**\n\t * Returns `object[ property ]`.\n\t * @returns {any}\n\t */\n\tgetValue() {\n\t\treturn this.object[ this.property ];\n\t}\n\n\t/**\n\t * Sets the value of `object[ property ]`, invokes any `onChange` handlers and updates the display.\n\t * @param {any} value\n\t * @returns {this}\n\t */\n\tsetValue( value ) {\n\t\tthis.object[ this.property ] = value;\n\t\tthis._callOnChange();\n\t\tthis.updateDisplay();\n\t\treturn this;\n\t}\n\n\t/**\n\t * Updates the display to keep it in sync with the current value. Useful for updating your\n\t * controllers when their values have been modified outside of the GUI.\n\t * @returns {this}\n\t */\n\tupdateDisplay() {\n\t\treturn this;\n\t}\n\n\tload( value ) {\n\t\tthis.setValue( value );\n\t\tthis._callOnFinishChange();\n\t\treturn this;\n\t}\n\n\tsave() {\n\t\treturn this.getValue();\n\t}\n\n\t/**\n\t * Destroys this controller and removes it from the parent GUI.\n\t */\n\tdestroy() {\n\t\tthis.parent.children.splice( this.parent.children.indexOf( this ), 1 );\n\t\tthis.parent.controllers.splice( this.parent.controllers.indexOf( this ), 1 );\n\t\tthis.parent.$children.removeChild( this.domElement );\n\t}\n\n}\n\nclass BooleanController extends Controller {\n\n\tconstructor( parent, object, property ) {\n\n\t\tsuper( parent, object, property, 'boolean', 'label' );\n\n\t\tthis.$input = document.createElement( 'input' );\n\t\tthis.$input.setAttribute( 'type', 'checkbox' );\n\t\tthis.$input.setAttribute( 'aria-labelledby', this.$name.id );\n\n\t\tthis.$widget.appendChild( this.$input );\n\n\t\tthis.$input.addEventListener( 'change', () => {\n\t\t\tthis.setValue( this.$input.checked );\n\t\t\tthis._callOnFinishChange();\n\t\t} );\n\n\t\tthis.$disable = this.$input;\n\n\t\tthis.updateDisplay();\n\n\t}\n\n\tupdateDisplay() {\n\t\tthis.$input.checked = this.getValue();\n\t\treturn this;\n\t}\n\n}\n\nfunction normalizeColorString( string ) {\n\n\tlet match, result;\n\n\tif ( match = string.match( /(#|0x)?([a-f0-9]{6})/i ) ) {\n\n\t\tresult = match[ 2 ];\n\n\t} else if ( match = string.match( /rgb\\(\\s*(\\d*)\\s*,\\s*(\\d*)\\s*,\\s*(\\d*)\\s*\\)/ ) ) {\n\n\t\tresult = parseInt( match[ 1 ] ).toString( 16 ).padStart( 2, 0 )\n\t\t\t+ parseInt( match[ 2 ] ).toString( 16 ).padStart( 2, 0 )\n\t\t\t+ parseInt( match[ 3 ] ).toString( 16 ).padStart( 2, 0 );\n\n\t} else if ( match = string.match( /^#?([a-f0-9])([a-f0-9])([a-f0-9])$/i ) ) {\n\n\t\tresult = match[ 1 ] + match[ 1 ] + match[ 2 ] + match[ 2 ] + match[ 3 ] + match[ 3 ];\n\n\t}\n\n\tif ( result ) {\n\t\treturn '#' + result;\n\t}\n\n\treturn false;\n\n}\n\nconst STRING = {\n\tisPrimitive: true,\n\tmatch: v => typeof v === 'string',\n\tfromHexString: normalizeColorString,\n\ttoHexString: normalizeColorString\n};\n\nconst INT = {\n\tisPrimitive: true,\n\tmatch: v => typeof v === 'number',\n\tfromHexString: string => parseInt( string.substring( 1 ), 16 ),\n\ttoHexString: value => '#' + value.toString( 16 ).padStart( 6, 0 )\n};\n\nconst ARRAY = {\n\tisPrimitive: false,\n\tmatch: Array.isArray,\n\tfromHexString( string, target, rgbScale = 1 ) {\n\n\t\tconst int = INT.fromHexString( string );\n\n\t\ttarget[ 0 ] = ( int >> 16 & 255 ) / 255 * rgbScale;\n\t\ttarget[ 1 ] = ( int >> 8 & 255 ) / 255 * rgbScale;\n\t\ttarget[ 2 ] = ( int & 255 ) / 255 * rgbScale;\n\n\t},\n\ttoHexString( [ r, g, b ], rgbScale = 1 ) {\n\n\t\trgbScale = 255 / rgbScale;\n\n\t\tconst int = ( r * rgbScale ) << 16 ^\n\t\t\t( g * rgbScale ) << 8 ^\n\t\t\t( b * rgbScale ) << 0;\n\n\t\treturn INT.toHexString( int );\n\n\t}\n};\n\nconst OBJECT = {\n\tisPrimitive: false,\n\tmatch: v => Object( v ) === v,\n\tfromHexString( string, target, rgbScale = 1 ) {\n\n\t\tconst int = INT.fromHexString( string );\n\n\t\ttarget.r = ( int >> 16 & 255 ) / 255 * rgbScale;\n\t\ttarget.g = ( int >> 8 & 255 ) / 255 * rgbScale;\n\t\ttarget.b = ( int & 255 ) / 255 * rgbScale;\n\n\t},\n\ttoHexString( { r, g, b }, rgbScale = 1 ) {\n\n\t\trgbScale = 255 / rgbScale;\n\n\t\tconst int = ( r * rgbScale ) << 16 ^\n\t\t\t( g * rgbScale ) << 8 ^\n\t\t\t( b * rgbScale ) << 0;\n\n\t\treturn INT.toHexString( int );\n\n\t}\n};\n\nconst FORMATS = [ STRING, INT, ARRAY, OBJECT ];\n\nfunction getColorFormat( value ) {\n\treturn FORMATS.find( format => format.match( value ) );\n}\n\nclass ColorController extends Controller {\n\n\tconstructor( parent, object, property, rgbScale ) {\n\n\t\tsuper( parent, object, property, 'color' );\n\n\t\tthis.$input = document.createElement( 'input' );\n\t\tthis.$input.setAttribute( 'type', 'color' );\n\t\tthis.$input.setAttribute( 'tabindex', -1 );\n\t\tthis.$input.setAttribute( 'aria-labelledby', this.$name.id );\n\n\t\tthis.$text = document.createElement( 'input' );\n\t\tthis.$text.setAttribute( 'type', 'text' );\n\t\tthis.$text.setAttribute( 'spellcheck', 'false' );\n\t\tthis.$text.setAttribute( 'aria-labelledby', this.$name.id );\n\n\t\tthis.$display = document.createElement( 'div' );\n\t\tthis.$display.classList.add( 'display' );\n\n\t\tthis.$display.appendChild( this.$input );\n\t\tthis.$widget.appendChild( this.$display );\n\t\tthis.$widget.appendChild( this.$text );\n\n\t\tthis._format = getColorFormat( this.initialValue );\n\t\tthis._rgbScale = rgbScale;\n\n\t\tthis._initialValueHexString = this.save();\n\t\tthis._textFocused = false;\n\n\t\tthis.$input.addEventListener( 'input', () => {\n\t\t\tthis._setValueFromHexString( this.$input.value );\n\t\t} );\n\n\t\tthis.$input.addEventListener( 'blur', () => {\n\t\t\tthis._callOnFinishChange();\n\t\t} );\n\n\t\tthis.$text.addEventListener( 'input', () => {\n\t\t\tconst tryParse = normalizeColorString( this.$text.value );\n\t\t\tif ( tryParse ) {\n\t\t\t\tthis._setValueFromHexString( tryParse );\n\t\t\t}\n\t\t} );\n\n\t\tthis.$text.addEventListener( 'focus', () => {\n\t\t\tthis._textFocused = true;\n\t\t\tthis.$text.select();\n\t\t} );\n\n\t\tthis.$text.addEventListener( 'blur', () => {\n\t\t\tthis._textFocused = false;\n\t\t\tthis.updateDisplay();\n\t\t\tthis._callOnFinishChange();\n\t\t} );\n\n\t\tthis.$disable = this.$text;\n\n\t\tthis.updateDisplay();\n\n\t}\n\n\treset() {\n\t\tthis._setValueFromHexString( this._initialValueHexString );\n\t\treturn this;\n\t}\n\n\t_setValueFromHexString( value ) {\n\n\t\tif ( this._format.isPrimitive ) {\n\n\t\t\tconst newValue = this._format.fromHexString( value );\n\t\t\tthis.setValue( newValue );\n\n\t\t} else {\n\n\t\t\tthis._format.fromHexString( value, this.getValue(), this._rgbScale );\n\t\t\tthis._callOnChange();\n\t\t\tthis.updateDisplay();\n\n\t\t}\n\n\t}\n\n\tsave() {\n\t\treturn this._format.toHexString( this.getValue(), this._rgbScale );\n\t}\n\n\tload( value ) {\n\t\tthis._setValueFromHexString( value );\n\t\tthis._callOnFinishChange();\n\t\treturn this;\n\t}\n\n\tupdateDisplay() {\n\t\tthis.$input.value = this._format.toHexString( this.getValue(), this._rgbScale );\n\t\tif ( !this._textFocused ) {\n\t\t\tthis.$text.value = this.$input.value.substring( 1 );\n\t\t}\n\t\tthis.$display.style.backgroundColor = this.$input.value;\n\t\treturn this;\n\t}\n\n}\n\nclass FunctionController extends Controller {\n\n\tconstructor( parent, object, property ) {\n\n\t\tsuper( parent, object, property, 'function' );\n\n\t\t// Buttons are the only case where widget contains name\n\t\tthis.$button = document.createElement( 'button' );\n\t\tthis.$button.appendChild( this.$name );\n\t\tthis.$widget.appendChild( this.$button );\n\n\t\tthis.$button.addEventListener( 'click', e => {\n\t\t\te.preventDefault();\n\t\t\tthis.getValue().call( this.object );\n\t\t} );\n\n\t\t// enables :active pseudo class on mobile\n\t\tthis.$button.addEventListener( 'touchstart', () => { } );\n\n\t\tthis.$disable = this.$button;\n\n\t}\n\n}\n\nclass NumberController extends Controller {\n\n\tconstructor( parent, object, property, min, max, step ) {\n\n\t\tsuper( parent, object, property, 'number' );\n\n\t\tthis._initInput();\n\n\t\tthis.min( min );\n\t\tthis.max( max );\n\n\t\tconst stepExplicit = step !== undefined;\n\t\tthis.step( stepExplicit ? step : this._getImplicitStep(), stepExplicit );\n\n\t\tthis.updateDisplay();\n\n\t}\n\n\tmin( min ) {\n\t\tthis._min = min;\n\t\tthis._onUpdateMinMax();\n\t\treturn this;\n\t}\n\n\tmax( max ) {\n\t\tthis._max = max;\n\t\tthis._onUpdateMinMax();\n\t\treturn this;\n\t}\n\n\tstep( step, explicit = true ) {\n\t\tthis._step = step;\n\t\tthis._stepExplicit = explicit;\n\t\treturn this;\n\t}\n\n\tupdateDisplay() {\n\n\t\tconst value = this.getValue();\n\n\t\tif ( this._hasSlider ) {\n\n\t\t\tlet percent = ( value - this._min ) / ( this._max - this._min );\n\t\t\tpercent = Math.max( 0, Math.min( percent, 1 ) );\n\n\t\t\tthis.$fill.style.width = percent * 100 + '%';\n\n\t\t}\n\n\t\tif ( !this._inputFocused ) {\n\t\t\tthis.$input.value = value;\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t_initInput() {\n\n\t\tthis.$input = document.createElement( 'input' );\n\t\tthis.$input.setAttribute( 'type', 'number' );\n\t\tthis.$input.setAttribute( 'step', 'any' );\n\t\tthis.$input.setAttribute( 'aria-labelledby', this.$name.id );\n\n\t\tthis.$widget.appendChild( this.$input );\n\n\t\tthis.$disable = this.$input;\n\n\t\tconst onInput = () => {\n\n\t\t\tconst value = parseFloat( this.$input.value );\n\n\t\t\tif ( isNaN( value ) ) return;\n\n\t\t\tthis.setValue( this._clamp( value ) );\n\n\t\t};\n\n\t\t// Keys & mouse wheel\n\t\t// ---------------------------------------------------------------------\n\n\t\tconst increment = delta => {\n\n\t\t\tconst value = parseFloat( this.$input.value );\n\n\t\t\tif ( isNaN( value ) ) return;\n\n\t\t\tthis._snapClampSetValue( value + delta );\n\n\t\t\t// Force the input to updateDisplay when it's focused\n\t\t\tthis.$input.value = this.getValue();\n\n\t\t};\n\n\t\tconst onKeyDown = e => {\n\t\t\tif ( e.code === 'Enter' ) {\n\t\t\t\tthis.$input.blur();\n\t\t\t}\n\t\t\tif ( e.code === 'ArrowUp' ) {\n\t\t\t\te.preventDefault();\n\t\t\t\tincrement( this._step * this._arrowKeyMultiplier( e ) );\n\t\t\t}\n\t\t\tif ( e.code === 'ArrowDown' ) {\n\t\t\t\te.preventDefault();\n\t\t\t\tincrement( this._step * this._arrowKeyMultiplier( e ) * -1 );\n\t\t\t}\n\t\t};\n\n\t\tconst onWheel = e => {\n\t\t\tif ( this._inputFocused ) {\n\t\t\t\te.preventDefault();\n\t\t\t\tincrement( this._step * this._normalizeMouseWheel( e ) );\n\t\t\t}\n\t\t};\n\n\t\t// Vertical drag\n\t\t// ---------------------------------------------------------------------\n\n\t\tlet testingForVerticalDrag = false,\n\t\t\tinitClientX,\n\t\t\tinitClientY,\n\t\t\tprevClientY,\n\t\t\tinitValue,\n\t\t\tdragDelta;\n\n\t\t// Once the mouse is dragged more than DRAG_THRESH px on any axis, we decide\n\t\t// on the user's intent: horizontal means highlight, vertical means drag.\n\t\tconst DRAG_THRESH = 5;\n\n\t\tconst onMouseDown = e => {\n\n\t\t\tinitClientX = e.clientX;\n\t\t\tinitClientY = prevClientY = e.clientY;\n\t\t\ttestingForVerticalDrag = true;\n\n\t\t\tinitValue = this.getValue();\n\t\t\tdragDelta = 0;\n\n\t\t\twindow.addEventListener( 'mousemove', onMouseMove );\n\t\t\twindow.addEventListener( 'mouseup', onMouseUp );\n\n\t\t};\n\n\t\tconst onMouseMove = e => {\n\n\t\t\tif ( testingForVerticalDrag ) {\n\n\t\t\t\tconst dx = e.clientX - initClientX;\n\t\t\t\tconst dy = e.clientY - initClientY;\n\n\t\t\t\tif ( Math.abs( dy ) > DRAG_THRESH ) {\n\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tthis.$input.blur();\n\t\t\t\t\ttestingForVerticalDrag = false;\n\t\t\t\t\tthis._setDraggingStyle( true, 'vertical' );\n\n\t\t\t\t} else if ( Math.abs( dx ) > DRAG_THRESH ) {\n\n\t\t\t\t\tonMouseUp();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// This isn't an else so that the first move counts towards dragDelta\n\t\t\tif ( !testingForVerticalDrag ) {\n\n\t\t\t\tconst dy = e.clientY - prevClientY;\n\n\t\t\t\tdragDelta -= dy * this._step * this._arrowKeyMultiplier( e );\n\n\t\t\t\t// Clamp dragDelta so we don't have 'dead space' after dragging past bounds.\n\t\t\t\t// We're okay with the fact that bounds can be undefined here.\n\t\t\t\tif ( initValue + dragDelta > this._max ) {\n\t\t\t\t\tdragDelta = this._max - initValue;\n\t\t\t\t} else if ( initValue + dragDelta < this._min ) {\n\t\t\t\t\tdragDelta = this._min - initValue;\n\t\t\t\t}\n\n\t\t\t\tthis._snapClampSetValue( initValue + dragDelta );\n\n\t\t\t}\n\n\t\t\tprevClientY = e.clientY;\n\n\t\t};\n\n\t\tconst onMouseUp = () => {\n\t\t\tthis._setDraggingStyle( false, 'vertical' );\n\t\t\tthis._callOnFinishChange();\n\t\t\twindow.removeEventListener( 'mousemove', onMouseMove );\n\t\t\twindow.removeEventListener( 'mouseup', onMouseUp );\n\t\t};\n\n\t\t// Focus state & onFinishChange\n\t\t// ---------------------------------------------------------------------\n\n\t\tconst onFocus = () => {\n\t\t\tthis._inputFocused = true;\n\t\t};\n\n\t\tconst onBlur = () => {\n\t\t\tthis._inputFocused = false;\n\t\t\tthis.updateDisplay();\n\t\t\tthis._callOnFinishChange();\n\t\t};\n\n\t\tthis.$input.addEventListener( 'input', onInput );\n\t\tthis.$input.addEventListener( 'keydown', onKeyDown );\n\t\tthis.$input.addEventListener( 'wheel', onWheel );\n\t\tthis.$input.addEventListener( 'mousedown', onMouseDown );\n\t\tthis.$input.addEventListener( 'focus', onFocus );\n\t\tthis.$input.addEventListener( 'blur', onBlur );\n\n\t}\n\n\t_initSlider() {\n\n\t\tthis._hasSlider = true;\n\n\t\t// Build DOM\n\t\t// ---------------------------------------------------------------------\n\n\t\tthis.$slider = document.createElement( 'div' );\n\t\tthis.$slider.classList.add( 'slider' );\n\n\t\tthis.$fill = document.createElement( 'div' );\n\t\tthis.$fill.classList.add( 'fill' );\n\n\t\tthis.$slider.appendChild( this.$fill );\n\t\tthis.$widget.insertBefore( this.$slider, this.$input );\n\n\t\tthis.domElement.classList.add( 'hasSlider' );\n\n\t\t// Map clientX to value\n\t\t// ---------------------------------------------------------------------\n\n\t\tconst map = ( v, a, b, c, d ) => {\n\t\t\treturn ( v - a ) / ( b - a ) * ( d - c ) + c;\n\t\t};\n\n\t\tconst setValueFromX = clientX => {\n\t\t\tconst rect = this.$slider.getBoundingClientRect();\n\t\t\tlet value = map( clientX, rect.left, rect.right, this._min, this._max );\n\t\t\tthis._snapClampSetValue( value );\n\t\t};\n\n\t\t// Mouse drag\n\t\t// ---------------------------------------------------------------------\n\n\t\tconst mouseDown = e => {\n\t\t\tthis._setDraggingStyle( true );\n\t\t\tsetValueFromX( e.clientX );\n\t\t\twindow.addEventListener( 'mousemove', mouseMove );\n\t\t\twindow.addEventListener( 'mouseup', mouseUp );\n\t\t};\n\n\t\tconst mouseMove = e => {\n\t\t\tsetValueFromX( e.clientX );\n\t\t};\n\n\t\tconst mouseUp = () => {\n\t\t\tthis._callOnFinishChange();\n\t\t\tthis._setDraggingStyle( false );\n\t\t\twindow.removeEventListener( 'mousemove', mouseMove );\n\t\t\twindow.removeEventListener( 'mouseup', mouseUp );\n\t\t};\n\n\t\t// Touch drag\n\t\t// ---------------------------------------------------------------------\n\n\t\tlet testingForScroll = false, prevClientX, prevClientY;\n\n\t\tconst beginTouchDrag = e => {\n\t\t\te.preventDefault();\n\t\t\tthis._setDraggingStyle( true );\n\t\t\tsetValueFromX( e.touches[ 0 ].clientX );\n\t\t\ttestingForScroll = false;\n\t\t};\n\n\t\tconst onTouchStart = e => {\n\n\t\t\tif ( e.touches.length > 1 ) return;\n\n\t\t\t// If we're in a scrollable container, we should wait for the first\n\t\t\t// touchmove to see if the user is trying to slide or scroll.\n\t\t\tif ( this._hasScrollBar ) {\n\n\t\t\t\tprevClientX = e.touches[ 0 ].clientX;\n\t\t\t\tprevClientY = e.touches[ 0 ].clientY;\n\t\t\t\ttestingForScroll = true;\n\n\t\t\t} else {\n\n\t\t\t\t// Otherwise, we can set the value straight away on touchstart.\n\t\t\t\tbeginTouchDrag( e );\n\n\t\t\t}\n\n\t\t\twindow.addEventListener( 'touchmove', onTouchMove );\n\t\t\twindow.addEventListener( 'touchend', onTouchEnd );\n\n\t\t};\n\n\t\tconst onTouchMove = e => {\n\n\t\t\tif ( testingForScroll ) {\n\n\t\t\t\tconst dx = e.touches[ 0 ].clientX - prevClientX;\n\t\t\t\tconst dy = e.touches[ 0 ].clientY - prevClientY;\n\n\t\t\t\tif ( Math.abs( dx ) > Math.abs( dy ) ) {\n\n\t\t\t\t\t// We moved horizontally, set the value and stop checking.\n\t\t\t\t\tbeginTouchDrag( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// This was, in fact, an attempt to scroll. Abort.\n\t\t\t\t\twindow.removeEventListener( 'touchmove', onTouchMove );\n\t\t\t\t\twindow.removeEventListener( 'touchend', onTouchEnd );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\te.preventDefault();\n\t\t\t\tsetValueFromX( e.touches[ 0 ].clientX );\n\n\t\t\t}\n\n\t\t};\n\n\t\tconst onTouchEnd = () => {\n\t\t\tthis._callOnFinishChange();\n\t\t\tthis._setDraggingStyle( false );\n\t\t\twindow.removeEventListener( 'touchmove', onTouchMove );\n\t\t\twindow.removeEventListener( 'touchend', onTouchEnd );\n\t\t};\n\n\t\t// Mouse wheel\n\t\t// ---------------------------------------------------------------------\n\n\t\t// We have to use a debounced function to call onFinishChange because\n\t\t// there's no way to tell when the user is \"done\" mouse-wheeling.\n\t\tconst callOnFinishChange = this._callOnFinishChange.bind( this );\n\t\tconst WHEEL_DEBOUNCE_TIME = 400;\n\t\tlet wheelFinishChangeTimeout;\n\n\t\tconst onWheel = e => {\n\n\t\t\t// ignore vertical wheels if there's a scrollbar\n\t\t\tconst isVertical = Math.abs( e.deltaX ) < Math.abs( e.deltaY );\n\t\t\tif ( isVertical && this._hasScrollBar ) return;\n\n\t\t\te.preventDefault();\n\n\t\t\t// set value\n\t\t\tconst delta = this._normalizeMouseWheel( e ) * this._step;\n\t\t\tthis._snapClampSetValue( this.getValue() + delta );\n\n\t\t\t// force the input to updateDisplay when it's focused\n\t\t\tthis.$input.value = this.getValue();\n\n\t\t\t// debounce onFinishChange\n\t\t\tclearTimeout( wheelFinishChangeTimeout );\n\t\t\twheelFinishChangeTimeout = setTimeout( callOnFinishChange, WHEEL_DEBOUNCE_TIME );\n\n\t\t};\n\n\t\tthis.$slider.addEventListener( 'mousedown', mouseDown );\n\t\tthis.$slider.addEventListener( 'touchstart', onTouchStart );\n\t\tthis.$slider.addEventListener( 'wheel', onWheel );\n\n\t}\n\n\t_setDraggingStyle( active, axis = 'horizontal' ) {\n\t\tif ( this.$slider ) {\n\t\t\tthis.$slider.classList.toggle( 'active', active );\n\t\t}\n\t\tdocument.body.classList.toggle( 'lil-gui-dragging', active );\n\t\tdocument.body.classList.toggle( `lil-gui-${axis}`, active );\n\t}\n\n\t_getImplicitStep() {\n\n\t\tif ( this._hasMin && this._hasMax ) {\n\t\t\treturn ( this._max - this._min ) / 1000;\n\t\t}\n\n\t\treturn 0.1;\n\n\t}\n\n\t_onUpdateMinMax() {\n\n\t\tif ( !this._hasSlider && this._hasMin && this._hasMax ) {\n\n\t\t\t// If this is the first time we're hearing about min and max\n\t\t\t// and we haven't explicitly stated what our step is, let's\n\t\t\t// update that too.\n\t\t\tif ( !this._stepExplicit ) {\n\t\t\t\tthis.step( this._getImplicitStep(), false );\n\t\t\t}\n\n\t\t\tthis._initSlider();\n\t\t\tthis.updateDisplay();\n\n\t\t}\n\n\t}\n\n\t_normalizeMouseWheel( e ) {\n\n\t\tlet { deltaX, deltaY } = e;\n\n\t\t// Safari and Chrome report weird non-integral values for a notched wheel,\n\t\t// but still expose actual lines scrolled via wheelDelta. Notched wheels\n\t\t// should behave the same way as arrow keys.\n\t\tif ( Math.floor( e.deltaY ) !== e.deltaY && e.wheelDelta ) {\n\t\t\tdeltaX = 0;\n\t\t\tdeltaY = -e.wheelDelta / 120;\n\t\t\tdeltaY *= this._stepExplicit ? 1 : 10;\n\t\t}\n\n\t\tconst wheel = deltaX + -deltaY;\n\n\t\treturn wheel;\n\n\t}\n\n\t_arrowKeyMultiplier( e ) {\n\n\t\tlet mult = this._stepExplicit ? 1 : 10;\n\n\t\tif ( e.shiftKey ) {\n\t\t\tmult *= 10;\n\t\t} else if ( e.altKey ) {\n\t\t\tmult /= 10;\n\t\t}\n\n\t\treturn mult;\n\n\t}\n\n\t_snap( value ) {\n\n\t\t// This would be the logical way to do things, but floating point errors.\n\t\t// return Math.round( value / this._step ) * this._step;\n\n\t\t// Using inverse step solves a lot of them, but not all\n\t\t// const inverseStep = 1 / this._step;\n\t\t// return Math.round( value * inverseStep ) / inverseStep;\n\n\t\t// Not happy about this, but haven't seen it break.\n\t\tconst r = Math.round( value / this._step ) * this._step;\n\t\treturn parseFloat( r.toPrecision( 15 ) );\n\n\t}\n\n\t_clamp( value ) {\n\t\t// either condition is false if min or max is undefined\n\t\tif ( value < this._min ) value = this._min;\n\t\tif ( value > this._max ) value = this._max;\n\t\treturn value;\n\t}\n\n\t_snapClampSetValue( value ) {\n\t\tthis.setValue( this._clamp( this._snap( value ) ) );\n\t}\n\n\tget _hasScrollBar() {\n\t\tconst root = this.parent.root.$children;\n\t\treturn root.scrollHeight > root.clientHeight;\n\t}\n\n\tget _hasMin() {\n\t\treturn this._min !== undefined;\n\t}\n\n\tget _hasMax() {\n\t\treturn this._max !== undefined;\n\t}\n\n}\n\nclass OptionController extends Controller {\n\n\tconstructor( parent, object, property, options ) {\n\n\t\tsuper( parent, object, property, 'option' );\n\n\t\tthis.$select = document.createElement( 'select' );\n\t\tthis.$select.setAttribute( 'aria-labelledby', this.$name.id );\n\n\t\tthis.$display = document.createElement( 'div' );\n\t\tthis.$display.classList.add( 'display' );\n\n\t\tthis._values = Array.isArray( options ) ? options : Object.values( options );\n\t\tthis._names = Array.isArray( options ) ? options : Object.keys( options );\n\n\t\tthis._names.forEach( name => {\n\t\t\tconst $option = document.createElement( 'option' );\n\t\t\t$option.innerHTML = name;\n\t\t\tthis.$select.appendChild( $option );\n\t\t} );\n\n\t\tthis.$select.addEventListener( 'change', () => {\n\t\t\tthis.setValue( this._values[ this.$select.selectedIndex ] );\n\t\t\tthis._callOnFinishChange();\n\t\t} );\n\n\t\tthis.$select.addEventListener( 'focus', () => {\n\t\t\tthis.$display.classList.add( 'focus' );\n\t\t} );\n\n\t\tthis.$select.addEventListener( 'blur', () => {\n\t\t\tthis.$display.classList.remove( 'focus' );\n\t\t} );\n\n\t\tthis.$widget.appendChild( this.$select );\n\t\tthis.$widget.appendChild( this.$display );\n\n\t\tthis.$disable = this.$select;\n\n\t\tthis.updateDisplay();\n\n\t}\n\n\tupdateDisplay() {\n\t\tconst value = this.getValue();\n\t\tconst index = this._values.indexOf( value );\n\t\tthis.$select.selectedIndex = index;\n\t\tthis.$display.innerHTML = index === -1 ? value : this._names[ index ];\n\t\treturn this;\n\t}\n\n}\n\nclass StringController extends Controller {\n\n\tconstructor( parent, object, property ) {\n\n\t\tsuper( parent, object, property, 'string' );\n\n\t\tthis.$input = document.createElement( 'input' );\n\t\tthis.$input.setAttribute( 'type', 'text' );\n\t\tthis.$input.setAttribute( 'aria-labelledby', this.$name.id );\n\n\t\tthis.$input.addEventListener( 'input', () => {\n\t\t\tthis.setValue( this.$input.value );\n\t\t} );\n\n\t\tthis.$input.addEventListener( 'keydown', e => {\n\t\t\tif ( e.code === 'Enter' ) {\n\t\t\t\tthis.$input.blur();\n\t\t\t}\n\t\t} );\n\n\t\tthis.$input.addEventListener( 'blur', () => {\n\t\t\tthis._callOnFinishChange();\n\t\t} );\n\n\t\tthis.$widget.appendChild( this.$input );\n\n\t\tthis.$disable = this.$input;\n\n\t\tthis.updateDisplay();\n\n\t}\n\n\tupdateDisplay() {\n\t\tthis.$input.value = this.getValue();\n\t\treturn this;\n\t}\n\n}\n\nconst stylesheet = `.lil-gui {\n  font-family: var(--font-family);\n  font-size: var(--font-size);\n  line-height: 1;\n  font-weight: normal;\n  font-style: normal;\n  text-align: left;\n  background-color: var(--background-color);\n  color: var(--text-color);\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n  --background-color: #1f1f1f;\n  --text-color: #ebebeb;\n  --title-background-color: #111111;\n  --title-text-color: #ebebeb;\n  --widget-color: #424242;\n  --hover-color: #4f4f4f;\n  --focus-color: #595959;\n  --number-color: #2cc9ff;\n  --string-color: #a2db3c;\n  --font-size: 11px;\n  --input-font-size: 11px;\n  --font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Arial, sans-serif;\n  --font-family-mono: Menlo, Monaco, Consolas, \"Droid Sans Mono\", monospace;\n  --padding: 4px;\n  --spacing: 4px;\n  --widget-height: 20px;\n  --name-width: 45%;\n  --slider-knob-width: 2px;\n  --slider-input-width: 27%;\n  --color-input-width: 27%;\n  --slider-input-min-width: 45px;\n  --color-input-min-width: 45px;\n  --folder-indent: 7px;\n  --widget-padding: 0 0 0 3px;\n  --widget-border-radius: 2px;\n  --checkbox-size: calc(0.75 * var(--widget-height));\n  --scrollbar-width: 5px;\n}\n.lil-gui, .lil-gui * {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n}\n.lil-gui.root {\n  width: var(--width, 245px);\n  display: flex;\n  flex-direction: column;\n}\n.lil-gui.root > .title {\n  background: var(--title-background-color);\n  color: var(--title-text-color);\n}\n.lil-gui.root > .children {\n  overflow-x: hidden;\n  overflow-y: auto;\n}\n.lil-gui.root > .children::-webkit-scrollbar {\n  width: var(--scrollbar-width);\n  height: var(--scrollbar-width);\n  background: var(--background-color);\n}\n.lil-gui.root > .children::-webkit-scrollbar-thumb {\n  border-radius: var(--scrollbar-width);\n  background: var(--focus-color);\n}\n@media (pointer: coarse) {\n  .lil-gui.allow-touch-styles {\n    --widget-height: 28px;\n    --padding: 6px;\n    --spacing: 6px;\n    --font-size: 13px;\n    --input-font-size: 16px;\n    --folder-indent: 10px;\n    --scrollbar-width: 7px;\n    --slider-input-min-width: 50px;\n    --color-input-min-width: 65px;\n  }\n}\n.lil-gui.force-touch-styles {\n  --widget-height: 28px;\n  --padding: 6px;\n  --spacing: 6px;\n  --font-size: 13px;\n  --input-font-size: 16px;\n  --folder-indent: 10px;\n  --scrollbar-width: 7px;\n  --slider-input-min-width: 50px;\n  --color-input-min-width: 65px;\n}\n.lil-gui.autoPlace {\n  max-height: 100%;\n  position: fixed;\n  top: 0;\n  right: 15px;\n  z-index: 1001;\n}\n\n.lil-gui .controller {\n  display: flex;\n  align-items: center;\n  padding: 0 var(--padding);\n  margin: var(--spacing) 0;\n}\n.lil-gui .controller.disabled {\n  opacity: 0.5;\n}\n.lil-gui .controller.disabled, .lil-gui .controller.disabled * {\n  pointer-events: none !important;\n}\n.lil-gui .controller > .name {\n  min-width: var(--name-width);\n  flex-shrink: 0;\n  white-space: pre;\n  padding-right: var(--spacing);\n  line-height: var(--widget-height);\n}\n.lil-gui .controller .widget {\n  position: relative;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  min-height: var(--widget-height);\n}\n.lil-gui .controller.string input {\n  color: var(--string-color);\n}\n.lil-gui .controller.boolean .widget {\n  cursor: pointer;\n}\n.lil-gui .controller.color .display {\n  width: 100%;\n  height: var(--widget-height);\n  border-radius: var(--widget-border-radius);\n  position: relative;\n}\n@media (hover: hover) {\n  .lil-gui .controller.color .display:hover:before {\n    content: \" \";\n    display: block;\n    position: absolute;\n    border-radius: var(--widget-border-radius);\n    border: 1px solid #fff9;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n  }\n}\n.lil-gui .controller.color input[type=color] {\n  opacity: 0;\n  width: 100%;\n  height: 100%;\n  cursor: pointer;\n}\n.lil-gui .controller.color input[type=text] {\n  margin-left: var(--spacing);\n  font-family: var(--font-family-mono);\n  min-width: var(--color-input-min-width);\n  width: var(--color-input-width);\n  flex-shrink: 0;\n}\n.lil-gui .controller.option select {\n  opacity: 0;\n  position: absolute;\n  width: 100%;\n  max-width: 100%;\n}\n.lil-gui .controller.option .display {\n  position: relative;\n  pointer-events: none;\n  border-radius: var(--widget-border-radius);\n  height: var(--widget-height);\n  line-height: var(--widget-height);\n  max-width: 100%;\n  overflow: hidden;\n  word-break: break-all;\n  padding-left: 0.55em;\n  padding-right: 1.75em;\n  background: var(--widget-color);\n}\n@media (hover: hover) {\n  .lil-gui .controller.option .display.focus {\n    background: var(--focus-color);\n  }\n}\n.lil-gui .controller.option .display.active {\n  background: var(--focus-color);\n}\n.lil-gui .controller.option .display:after {\n  font-family: \"lil-gui\";\n  content: \"\u2195\";\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  padding-right: 0.375em;\n}\n.lil-gui .controller.option .widget,\n.lil-gui .controller.option select {\n  cursor: pointer;\n}\n@media (hover: hover) {\n  .lil-gui .controller.option .widget:hover .display {\n    background: var(--hover-color);\n  }\n}\n.lil-gui .controller.number input {\n  color: var(--number-color);\n}\n.lil-gui .controller.number.hasSlider input {\n  margin-left: var(--spacing);\n  width: var(--slider-input-width);\n  min-width: var(--slider-input-min-width);\n  flex-shrink: 0;\n}\n.lil-gui .controller.number .slider {\n  width: 100%;\n  height: var(--widget-height);\n  background-color: var(--widget-color);\n  border-radius: var(--widget-border-radius);\n  padding-right: var(--slider-knob-width);\n  overflow: hidden;\n  cursor: ew-resize;\n  touch-action: pan-y;\n}\n@media (hover: hover) {\n  .lil-gui .controller.number .slider:hover {\n    background-color: var(--hover-color);\n  }\n}\n.lil-gui .controller.number .slider.active {\n  background-color: var(--focus-color);\n}\n.lil-gui .controller.number .slider.active .fill {\n  opacity: 0.95;\n}\n.lil-gui .controller.number .fill {\n  height: 100%;\n  border-right: var(--slider-knob-width) solid var(--number-color);\n  box-sizing: content-box;\n}\n\n.lil-gui-dragging .lil-gui {\n  --hover-color: var(--widget-color);\n}\n.lil-gui-dragging * {\n  cursor: ew-resize !important;\n}\n\n.lil-gui-dragging.lil-gui-vertical * {\n  cursor: ns-resize !important;\n}\n\n.lil-gui .title {\n  --title-height: calc(var(--widget-height) + var(--spacing) * 1.25);\n  height: var(--title-height);\n  line-height: calc(var(--title-height) - 4px);\n  font-weight: 600;\n  padding: 0 var(--padding);\n  -webkit-tap-highlight-color: transparent;\n  cursor: pointer;\n  outline: none;\n  text-decoration-skip: objects;\n}\n.lil-gui .title:before {\n  font-family: \"lil-gui\";\n  content: \"\u25BE\";\n  padding-right: 2px;\n  display: inline-block;\n}\n.lil-gui .title:active {\n  background: var(--title-background-color);\n  opacity: 0.75;\n}\n@media (hover: hover) {\n  body:not(.lil-gui-dragging) .lil-gui .title:hover {\n    background: var(--title-background-color);\n    opacity: 0.85;\n  }\n  .lil-gui .title:focus {\n    text-decoration: underline var(--focus-color);\n  }\n}\n.lil-gui.root > .title:focus {\n  text-decoration: none !important;\n}\n.lil-gui.closed > .title:before {\n  content: \"\u25B8\";\n}\n.lil-gui.closed > .children {\n  transform: translateY(-7px);\n  opacity: 0;\n}\n.lil-gui.closed:not(.transition) > .children {\n  display: none;\n}\n.lil-gui.transition > .children {\n  transition-duration: 300ms;\n  transition-property: height, opacity, transform;\n  transition-timing-function: cubic-bezier(0.2, 0.6, 0.35, 1);\n  overflow: hidden;\n  pointer-events: none;\n}\n.lil-gui .children:empty:before {\n  content: \"Empty\";\n  padding: 0 var(--padding);\n  margin: var(--spacing) 0;\n  display: block;\n  height: var(--widget-height);\n  font-style: italic;\n  line-height: var(--widget-height);\n  opacity: 0.5;\n}\n.lil-gui.root > .children > .lil-gui > .title {\n  border: 0 solid var(--widget-color);\n  border-width: 1px 0;\n  transition: border-color 300ms;\n}\n.lil-gui.root > .children > .lil-gui.closed > .title {\n  border-bottom-color: transparent;\n}\n.lil-gui + .controller {\n  border-top: 1px solid var(--widget-color);\n  margin-top: 0;\n  padding-top: var(--spacing);\n}\n.lil-gui .lil-gui .lil-gui > .title {\n  border: none;\n}\n.lil-gui .lil-gui .lil-gui > .children {\n  border: none;\n  margin-left: var(--folder-indent);\n  border-left: 2px solid var(--widget-color);\n}\n.lil-gui .lil-gui .controller {\n  border: none;\n}\n\n.lil-gui input {\n  -webkit-tap-highlight-color: transparent;\n  border: 0;\n  outline: none;\n  font-family: var(--font-family);\n  font-size: var(--input-font-size);\n  border-radius: var(--widget-border-radius);\n  height: var(--widget-height);\n  background: var(--widget-color);\n  color: var(--text-color);\n  width: 100%;\n}\n@media (hover: hover) {\n  .lil-gui input:hover {\n    background: var(--hover-color);\n  }\n  .lil-gui input:active {\n    background: var(--focus-color);\n  }\n}\n.lil-gui input:disabled {\n  opacity: 1;\n}\n.lil-gui input[type=text],\n.lil-gui input[type=number] {\n  padding: var(--widget-padding);\n}\n.lil-gui input[type=text]:focus,\n.lil-gui input[type=number]:focus {\n  background: var(--focus-color);\n}\n.lil-gui input::-webkit-outer-spin-button,\n.lil-gui input::-webkit-inner-spin-button {\n  -webkit-appearance: none;\n  margin: 0;\n}\n.lil-gui input[type=number] {\n  -moz-appearance: textfield;\n}\n.lil-gui input[type=checkbox] {\n  appearance: none;\n  -webkit-appearance: none;\n  height: var(--checkbox-size);\n  width: var(--checkbox-size);\n  border-radius: var(--widget-border-radius);\n  text-align: center;\n  cursor: pointer;\n}\n.lil-gui input[type=checkbox]:checked:before {\n  font-family: \"lil-gui\";\n  content: \"\u2713\";\n  font-size: var(--checkbox-size);\n  line-height: var(--checkbox-size);\n}\n@media (hover: hover) {\n  .lil-gui input[type=checkbox]:focus {\n    box-shadow: inset 0 0 0 1px var(--focus-color);\n  }\n}\n.lil-gui button {\n  -webkit-tap-highlight-color: transparent;\n  outline: none;\n  cursor: pointer;\n  font-family: var(--font-family);\n  font-size: var(--font-size);\n  color: var(--text-color);\n  width: 100%;\n  height: var(--widget-height);\n  text-transform: none;\n  background: var(--widget-color);\n  border-radius: var(--widget-border-radius);\n  border: 1px solid var(--widget-color);\n  text-align: center;\n  line-height: calc(var(--widget-height) - 4px);\n}\n@media (hover: hover) {\n  .lil-gui button:hover {\n    background: var(--hover-color);\n    border-color: var(--hover-color);\n  }\n  .lil-gui button:focus {\n    border-color: var(--focus-color);\n  }\n}\n.lil-gui button:active {\n  background: var(--focus-color);\n}\n\n@font-face {\n  font-family: \"lil-gui\";\n  src: url(\"data:application/font-woff;charset=utf-8;base64,d09GRgABAAAAAAUsAAsAAAAACJwAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAABHU1VCAAABCAAAAH4AAADAImwmYE9TLzIAAAGIAAAAPwAAAGBKqH5SY21hcAAAAcgAAAD0AAACrukyyJBnbHlmAAACvAAAAF8AAACEIZpWH2hlYWQAAAMcAAAAJwAAADZfcj2zaGhlYQAAA0QAAAAYAAAAJAC5AHhobXR4AAADXAAAABAAAABMAZAAAGxvY2EAAANsAAAAFAAAACgCEgIybWF4cAAAA4AAAAAeAAAAIAEfABJuYW1lAAADoAAAASIAAAIK9SUU/XBvc3QAAATEAAAAZgAAAJCTcMc2eJxVjbEOgjAURU+hFRBK1dGRL+ALnAiToyMLEzFpnPz/eAshwSa97517c/MwwJmeB9kwPl+0cf5+uGPZXsqPu4nvZabcSZldZ6kfyWnomFY/eScKqZNWupKJO6kXN3K9uCVoL7iInPr1X5baXs3tjuMqCtzEuagm/AAlzQgPAAB4nGNgYRBlnMDAysDAYM/gBiT5oLQBAwuDJAMDEwMrMwNWEJDmmsJwgCFeXZghBcjlZMgFCzOiKOIFAB71Bb8AeJy1kjFuwkAQRZ+DwRAwBtNQRUGKQ8OdKCAWUhAgKLhIuAsVSpWz5Bbkj3dEgYiUIszqWdpZe+Z7/wB1oCYmIoboiwiLT2WjKl/jscrHfGg/pKdMkyklC5Zs2LEfHYpjcRoPzme9MWWmk3dWbK9ObkWkikOetJ554fWyoEsmdSlt+uR0pCJR34b6t/TVg1SY3sYvdf8vuiKrpyaDXDISiegp17p7579Gp3p++y7HPAiY9pmTibljrr85qSidtlg4+l25GLCaS8e6rRxNBmsnERunKbaOObRz7N72ju5vdAjYpBXHgJylOAVsMseDAPEP8LYoUHicY2BiAAEfhiAGJgZWBgZ7RnFRdnVJELCQlBSRlATJMoLV2DK4glSYs6ubq5vbKrJLSbGrgEmovDuDJVhe3VzcXFwNLCOILB/C4IuQ1xTn5FPilBTj5FPmBAB4WwoqAHicY2BkYGAA4sk1sR/j+W2+MnAzpDBgAyEMQUCSg4EJxAEAwUgFHgB4nGNgZGBgSGFggJMhDIwMqEAYAByHATJ4nGNgAIIUNEwmAABl3AGReJxjYAACIQYlBiMGJ3wQAEcQBEV4nGNgZGBgEGZgY2BiAAEQyQWEDAz/wXwGAAsPATIAAHicXdBNSsNAHAXwl35iA0UQXYnMShfS9GPZA7T7LgIu03SSpkwzYTIt1BN4Ak/gKTyAeCxfw39jZkjymzcvAwmAW/wgwHUEGDb36+jQQ3GXGot79L24jxCP4gHzF/EIr4jEIe7wxhOC3g2TMYy4Q7+Lu/SHuEd/ivt4wJd4wPxbPEKMX3GI5+DJFGaSn4qNzk8mcbKSR6xdXdhSzaOZJGtdapd4vVPbi6rP+cL7TGXOHtXKll4bY1Xl7EGnPtp7Xy2n00zyKLVHfkHBa4IcJ2oD3cgggWvt/V/FbDrUlEUJhTn/0azVWbNTNr0Ens8de1tceK9xZmfB1CPjOmPH4kitmvOubcNpmVTN3oFJyjzCvnmrwhJTzqzVj9jiSX911FjeAAB4nG3HMRKCMBBA0f0giiKi4DU8k0V2GWbIZDOh4PoWWvq6J5V8If9NVNQcaDhyouXMhY4rPTcG7jwYmXhKq8Wz+p762aNaeYXom2n3m2dLTVgsrCgFJ7OTmIkYbwIbC6vIB7WmFfAAAA==\") format(\"woff\");\n}`;\n\nfunction _injectStyles( cssContent ) {\n\tconst injected = document.createElement( 'style' );\n\tinjected.innerHTML = cssContent;\n\tconst before = document.querySelector( 'head link[rel=stylesheet], head style' );\n\tif ( before ) {\n\t\tdocument.head.insertBefore( injected, before );\n\t} else {\n\t\tdocument.head.appendChild( injected );\n\t}\n}\n\nlet stylesInjected = false;\n\nclass GUI {\n\n\t/**\n\t * Creates a panel that holds controllers.\n\t * @example\n\t * new GUI();\n\t * new GUI( { container: document.getElementById( 'custom' ) } );\n\t *\n\t * @param {object} [options]\n\t * @param {boolean} [options.autoPlace=true]\n\t * Adds the GUI to `document.body` and fixes it to the top right of the page.\n\t *\n\t * @param {HTMLElement} [options.container]\n\t * Adds the GUI to this DOM element. Overrides `autoPlace`.\n\t *\n\t * @param {number} [options.width=245]\n\t * Width of the GUI in pixels, usually set when name labels become too long. Note that you can make\n\t * name labels wider in CSS with `.lil\u2011gui { \u2011\u2011name\u2011width: 55% }`\n\t *\n\t * @param {string} [options.title=Controls]\n\t * Name to display in the title bar.\n\t *\n\t * @param {boolean} [options.injectStyles=true]\n\t * Injects the default stylesheet into the page if this is the first GUI.\n\t * Pass `false` to use your own stylesheet.\n\t *\n\t * @param {number} [options.touchStyles=true]\n\t * Makes controllers larger on touch devices. Pass `false` to disable touch styles.\n\t *\n\t * @param {GUI} [options.parent]\n\t * Adds this GUI as a child in another GUI. Usually this is done for you by `addFolder()`.\n\t *\n\t */\n\tconstructor( {\n\t\tparent,\n\t\tautoPlace = parent === undefined,\n\t\tcontainer,\n\t\twidth,\n\t\ttitle = 'Controls',\n\t\tinjectStyles = true,\n\t\ttouchStyles = true\n\t} = {} ) {\n\n\t\t/**\n\t\t * The GUI containing this folder, or `undefined` if this is the root GUI.\n\t\t * @type {GUI}\n\t\t */\n\t\tthis.parent = parent;\n\n\t\t/**\n\t\t * The top level GUI containing this folder, or `this` if this is the root GUI.\n\t\t * @type {GUI}\n\t\t */\n\t\tthis.root = parent ? parent.root : this;\n\n\t\t/**\n\t\t * The list of controllers and folders contained by this GUI.\n\t\t * @type {Array<GUI|Controller>}\n\t\t */\n\t\tthis.children = [];\n\n\t\t/**\n\t\t * The list of controllers contained by this GUI.\n\t\t * @type {Array<Controller>}\n\t\t */\n\t\tthis.controllers = [];\n\n\t\t/**\n\t\t * The list of folders contained by this GUI.\n\t\t * @type {Array<GUI>}\n\t\t */\n\t\tthis.folders = [];\n\n\t\t/**\n\t\t * Used to determine if the GUI is closed. Use `gui.open()` or `gui.close()` to change this.\n\t\t * @type {boolean}\n\t\t */\n\t\tthis._closed = false;\n\n\t\t/**\n\t\t * Used to determine if the GUI is hidden. Use `gui.show()` or `gui.hide()` to change this.\n\t\t * @type {boolean}\n\t\t */\n\t\tthis._hidden = false;\n\n\t\t/**\n\t\t * The outermost container element.\n\t\t * @type {HTMLElement}\n\t\t */\n\t\tthis.domElement = document.createElement( 'div' );\n\t\tthis.domElement.classList.add( 'lil-gui' );\n\n\t\t/**\n\t\t * The DOM element that contains the title.\n\t\t * @type {HTMLElement}\n\t\t */\n\t\tthis.$title = document.createElement( 'div' );\n\t\tthis.$title.classList.add( 'title' );\n\t\tthis.$title.setAttribute( 'role', 'button' );\n\t\tthis.$title.setAttribute( 'aria-expanded', true );\n\t\tthis.$title.setAttribute( 'tabindex', 0 );\n\n\t\tthis.$title.addEventListener( 'click', () => this.openAnimated( this._closed ) );\n\t\tthis.$title.addEventListener( 'keydown', e => {\n\t\t\tif ( e.code === 'Enter' || e.code === 'Space' ) {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.$title.click();\n\t\t\t}\n\t\t} );\n\n\t\t// enables :active pseudo class on mobile\n\t\tthis.$title.addEventListener( 'touchstart', () => { } );\n\n\t\t/**\n\t\t * The DOM element that contains children.\n\t\t * @type {HTMLElement}\n\t\t */\n\t\tthis.$children = document.createElement( 'div' );\n\t\tthis.$children.classList.add( 'children' );\n\n\t\tthis.domElement.appendChild( this.$title );\n\t\tthis.domElement.appendChild( this.$children );\n\n\t\tthis.title( title );\n\n\t\tif ( touchStyles ) {\n\t\t\tthis.domElement.classList.add( 'allow-touch-styles' );\n\t\t}\n\n\t\tif ( this.parent ) {\n\n\t\t\tthis.parent.children.push( this );\n\t\t\tthis.parent.folders.push( this );\n\n\t\t\tthis.parent.$children.appendChild( this.domElement );\n\n\t\t\t// Stop the constructor early, everything onward only applies to root GUI's\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.domElement.classList.add( 'root' );\n\n\t\t// Inject stylesheet if we haven't done that yet\n\t\tif ( !stylesInjected && injectStyles ) {\n\t\t\t_injectStyles( stylesheet );\n\t\t\tstylesInjected = true;\n\t\t}\n\n\t\tif ( container ) {\n\n\t\t\tcontainer.appendChild( this.domElement );\n\n\t\t} else if ( autoPlace ) {\n\n\t\t\tthis.domElement.classList.add( 'autoPlace' );\n\t\t\tdocument.body.appendChild( this.domElement );\n\n\t\t}\n\n\t\tif ( width ) {\n\t\t\tthis.domElement.style.setProperty( '--width', width + 'px' );\n\t\t}\n\n\t\t// Don't fire global key events while typing in the GUI:\n\t\tthis.domElement.addEventListener( 'keydown', e => e.stopPropagation() );\n\t\tthis.domElement.addEventListener( 'keyup', e => e.stopPropagation() );\n\n\t}\n\n\t/**\n\t * Adds a controller to the GUI, inferring controller type using the `typeof` operator.\n\t * @example\n\t * gui.add( object, 'property' );\n\t * gui.add( object, 'number', 0, 100, 1 );\n\t * gui.add( object, 'options', [ 1, 2, 3 ] );\n\t *\n\t * @param {object} object The object the controller will modify.\n\t * @param {string} property Name of the property to control.\n\t * @param {number|object|Array} [$1] Minimum value for number controllers, or the set of\n\t * selectable values for a dropdown.\n\t * @param {number} [max] Maximum value for number controllers.\n\t * @param {number} [step] Step value for number controllers.\n\t * @returns {Controller}\n\t */\n\tadd( object, property, $1, max, step ) {\n\n\t\tif ( Object( $1 ) === $1 ) {\n\n\t\t\treturn new OptionController( this, object, property, $1 );\n\n\t\t}\n\n\t\tconst initialValue = object[ property ];\n\n\t\tswitch ( typeof initialValue ) {\n\n\t\t\tcase 'number':\n\n\t\t\t\treturn new NumberController( this, object, property, $1, max, step );\n\n\t\t\tcase 'boolean':\n\n\t\t\t\treturn new BooleanController( this, object, property );\n\n\t\t\tcase 'string':\n\n\t\t\t\treturn new StringController( this, object, property );\n\n\t\t\tcase 'function':\n\n\t\t\t\treturn new FunctionController( this, object, property );\n\n\t\t}\n\n\t\tconsole.error( `gui.add failed\n\tproperty:`, property, `\n\tobject:`, object, `\n\tvalue:`, initialValue );\n\n\t}\n\n\t/**\n\t * Adds a color controller to the GUI.\n\t * @example\n\t * params = {\n\t * \tcssColor: '#ff00ff',\n\t * \trgbColor: { r: 0, g: 0.2, b: 0.4 },\n\t * \tcustomRange: [ 0, 127, 255 ],\n\t * };\n\t *\n\t * gui.addColor( params, 'cssColor' );\n\t * gui.addColor( params, 'rgbColor' );\n\t * gui.addColor( params, 'customRange', 255 );\n\t *\n\t * @param {object} object The object the controller will modify.\n\t * @param {string} property Name of the property to control.\n\t * @param {number} rgbScale Maximum value for a color channel when using an RGB color. You may\n\t * need to set this to 255 if your colors are too dark.\n\t * @returns {Controller}\n\t */\n\taddColor( object, property, rgbScale = 1 ) {\n\t\treturn new ColorController( this, object, property, rgbScale );\n\t}\n\n\t/**\n\t * Adds a folder to the GUI, which is just another GUI. This method returns\n\t * the nested GUI so you can add controllers to it.\n\t * @example\n\t * const folder = gui.addFolder( 'Position' );\n\t * folder.add( position, 'x' );\n\t * folder.add( position, 'y' );\n\t * folder.add( position, 'z' );\n\t *\n\t * @param {string} title Name to display in the folder's title bar.\n\t * @returns {GUI}\n\t */\n\taddFolder( title ) {\n\t\treturn new GUI( { parent: this, title } );\n\t}\n\n\t/**\n\t * Recalls values that were saved with `gui.save()`.\n\t * @param {object} obj\n\t * @param {boolean} recursive Pass false to exclude folders descending from this GUI.\n\t * @returns {this}\n\t */\n\tload( obj, recursive = true ) {\n\n\t\tif ( obj.controllers ) {\n\n\t\t\tthis.controllers.forEach( c => {\n\n\t\t\t\tif ( c instanceof FunctionController ) return;\n\n\t\t\t\tif ( c._name in obj.controllers ) {\n\t\t\t\t\tc.load( obj.controllers[ c._name ] );\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t}\n\n\t\tif ( recursive && obj.folders ) {\n\n\t\t\tthis.folders.forEach( f => {\n\n\t\t\t\tif ( f._title in obj.folders ) {\n\t\t\t\t\tf.load( obj.folders[ f._title ] );\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Returns an object mapping controller names to values. The object can be passed to `gui.load()` to\n\t * recall these values.\n\t * @example\n\t * {\n\t * \tcontrollers: {\n\t * \t\tprop1: 1,\n\t * \t\tprop2: 'value',\n\t * \t\t...\n\t * \t},\n\t * \tfolders: {\n\t * \t\tfolderName1: { controllers, folders },\n\t * \t\tfolderName2: { controllers, folders }\n\t * \t\t...\n\t * \t}\n\t * }\n\t *\n\t * @param {boolean} recursive Pass false to exclude folders descending from this GUI.\n\t * @returns {object}\n\t */\n\tsave( recursive = true ) {\n\n\t\tconst obj = {\n\t\t\tcontrollers: {},\n\t\t\tfolders: {}\n\t\t};\n\n\t\tthis.controllers.forEach( c => {\n\n\t\t\tif ( c instanceof FunctionController ) return;\n\n\t\t\tif ( c._name in obj.controllers ) {\n\t\t\t\tthrow new Error( `Cannot save GUI with duplicate property \"${c._name}\"` );\n\t\t\t}\n\n\t\t\tobj.controllers[ c._name ] = c.save();\n\n\t\t} );\n\n\t\tif ( recursive ) {\n\n\t\t\tthis.folders.forEach( f => {\n\n\t\t\t\tif ( f._title in obj.folders ) {\n\t\t\t\t\tthrow new Error( `Cannot save GUI with duplicate folder \"${f._title}\"` );\n\t\t\t\t}\n\n\t\t\t\tobj.folders[ f._title ] = f.save();\n\n\t\t\t} );\n\n\t\t}\n\n\t\treturn obj;\n\n\t}\n\n\t/**\n\t * Opens a GUI or folder. GUI and folders are open by default.\n\t * @param {boolean} open Pass false to close\n\t * @returns {this}\n\t * @example\n\t * gui.open(); // open\n\t * gui.open( false ); // close\n\t * gui.open( gui._closed ); // toggle\n\t */\n\topen( open = true ) {\n\n\t\tthis._closed = !open;\n\n\t\tthis.$title.setAttribute( 'aria-expanded', !this._closed );\n\t\tthis.domElement.classList.toggle( 'closed', this._closed );\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Closes the GUI.\n\t * @returns {this}\n\t */\n\tclose() {\n\t\treturn this.open( false );\n\t}\n\n\t/**\n\t * Shows the GUI after it's been hidden.\n\t * @param {boolean} show\n\t * @returns {this}\n\t * @example\n\t * gui.show();\n\t * gui.show( false ); // hide\n\t * gui.show( gui._hidden ); // toggle\n\t */\n\tshow( show = true ) {\n\n\t\tthis._hidden = !show;\n\n\t\tthis.domElement.style.display = this._hidden ? 'none' : '';\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Hides the GUI.\n\t * @returns {this}\n\t */\n\thide() {\n\t\treturn this.show( false );\n\t}\n\n\topenAnimated( open = true ) {\n\n\t\t// set state immediately\n\t\tthis._closed = !open;\n\n\t\tthis.$title.setAttribute( 'aria-expanded', !this._closed );\n\n\t\t// wait for next frame to measure $children\n\t\trequestAnimationFrame( () => {\n\n\t\t\t// explicitly set initial height for transition\n\t\t\tconst initialHeight = this.$children.clientHeight;\n\t\t\tthis.$children.style.height = initialHeight + 'px';\n\n\t\t\tthis.domElement.classList.add( 'transition' );\n\n\t\t\tconst onTransitionEnd = e => {\n\t\t\t\tif ( e.target !== this.$children ) return;\n\t\t\t\tthis.$children.style.height = '';\n\t\t\t\tthis.domElement.classList.remove( 'transition' );\n\t\t\t\tthis.$children.removeEventListener( 'transitionend', onTransitionEnd );\n\t\t\t};\n\n\t\t\tthis.$children.addEventListener( 'transitionend', onTransitionEnd );\n\n\t\t\t// todo: this is wrong if children's scrollHeight makes for a gui taller than maxHeight\n\t\t\tconst targetHeight = !open ? 0 : this.$children.scrollHeight;\n\n\t\t\tthis.domElement.classList.toggle( 'closed', !open );\n\n\t\t\trequestAnimationFrame( () => {\n\t\t\t\tthis.$children.style.height = targetHeight + 'px';\n\t\t\t} );\n\n\t\t} );\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Change the title of this GUI.\n\t * @param {string} title\n\t * @returns {this}\n\t */\n\ttitle( title ) {\n\t\t/**\n\t\t * Current title of the GUI. Use `gui.title( 'Title' )` to modify this value.\n\t\t * @type {string}\n\t\t */\n\t\tthis._title = title;\n\t\tthis.$title.innerHTML = title;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Resets all controllers to their initial values.\n\t * @param {boolean} recursive Pass false to exclude folders descending from this GUI.\n\t * @returns {this}\n\t */\n\treset( recursive = true ) {\n\t\tconst controllers = recursive ? this.controllersRecursive() : this.controllers;\n\t\tcontrollers.forEach( c => c.reset() );\n\t\treturn this;\n\t}\n\n\t/**\n\t * Pass a function to be called whenever a controller in this GUI changes.\n\t * @param {function({object:object, property:string, value:any, controller:Controller})} callback\n\t * @returns {this}\n\t * @example\n\t * gui.onChange( event => {\n\t * \tevent.object     // object that was modified\n\t * \tevent.property   // string, name of property\n\t * \tevent.value      // new value of controller\n\t * \tevent.controller // controller that was modified\n\t * } );\n\t */\n\tonChange( callback ) {\n\t\t/**\n\t\t * Used to access the function bound to `onChange` events. Don't modify this value\n\t\t * directly. Use the `gui.onChange( callback )` method instead.\n\t\t * @type {Function}\n\t\t */\n\t\tthis._onChange = callback;\n\t\treturn this;\n\t}\n\n\t_callOnChange( controller ) {\n\n\t\tif ( this.parent ) {\n\t\t\tthis.parent._callOnChange( controller );\n\t\t}\n\n\t\tif ( this._onChange !== undefined ) {\n\t\t\tthis._onChange.call( this, {\n\t\t\t\tobject: controller.object,\n\t\t\t\tproperty: controller.property,\n\t\t\t\tvalue: controller.getValue(),\n\t\t\t\tcontroller\n\t\t\t} );\n\t\t}\n\t}\n\n\t/**\n\t * Pass a function to be called whenever a controller in this GUI has finished changing.\n\t * @param {function({object:object, property:string, value:any, controller:Controller})} callback\n\t * @returns {this}\n\t * @example\n\t * gui.onFinishChange( event => {\n\t * \tevent.object     // object that was modified\n\t * \tevent.property   // string, name of property\n\t * \tevent.value      // new value of controller\n\t * \tevent.controller // controller that was modified\n\t * } );\n\t */\n\tonFinishChange( callback ) {\n\t\t/**\n\t\t * Used to access the function bound to `onFinishChange` events. Don't modify this value\n\t\t * directly. Use the `gui.onFinishChange( callback )` method instead.\n\t\t * @type {Function}\n\t\t */\n\t\tthis._onFinishChange = callback;\n\t\treturn this;\n\t}\n\n\t_callOnFinishChange( controller ) {\n\n\t\tif ( this.parent ) {\n\t\t\tthis.parent._callOnFinishChange( controller );\n\t\t}\n\n\t\tif ( this._onFinishChange !== undefined ) {\n\t\t\tthis._onFinishChange.call( this, {\n\t\t\t\tobject: controller.object,\n\t\t\t\tproperty: controller.property,\n\t\t\t\tvalue: controller.getValue(),\n\t\t\t\tcontroller\n\t\t\t} );\n\t\t}\n\t}\n\n\t/**\n\t * Destroys all DOM elements and event listeners associated with this GUI\n\t */\n\tdestroy() {\n\n\t\tif ( this.parent ) {\n\t\t\tthis.parent.children.splice( this.parent.children.indexOf( this ), 1 );\n\t\t\tthis.parent.folders.splice( this.parent.folders.indexOf( this ), 1 );\n\t\t}\n\n\t\tif ( this.domElement.parentElement ) {\n\t\t\tthis.domElement.parentElement.removeChild( this.domElement );\n\t\t}\n\n\t\tArray.from( this.children ).forEach( c => c.destroy() );\n\n\t}\n\n\t/**\n\t * Returns an array of controllers contained by this GUI and its descendents.\n\t * @returns {Controller[]}\n\t */\n\tcontrollersRecursive() {\n\t\tlet controllers = Array.from( this.controllers );\n\t\tthis.folders.forEach( f => {\n\t\t\tcontrollers = controllers.concat( f.controllersRecursive() );\n\t\t} );\n\t\treturn controllers;\n\t}\n\n\t/**\n\t * Returns an array of folders contained by this GUI and its descendents.\n\t * @returns {GUI[]}\n\t */\n\tfoldersRecursive() {\n\t\tlet folders = Array.from( this.folders );\n\t\tthis.folders.forEach( f => {\n\t\t\tfolders = folders.concat( f.foldersRecursive() );\n\t\t} );\n\t\treturn folders;\n\t}\n\n}\n\nexport default GUI;\nexport { BooleanController, ColorController, Controller, FunctionController, GUI, NumberController, OptionController, StringController };\n", "import d from \"./node_modules/lil-gui/dist/lil-gui.esm.js\";export default d;\nexport * from \"./node_modules/lil-gui/dist/lil-gui.esm.js\""],
  "mappings": "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",
  "names": []
}
